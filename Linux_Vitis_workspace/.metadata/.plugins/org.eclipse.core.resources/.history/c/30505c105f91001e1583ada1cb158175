#include <stdio.h>
#include "xgpio.h"
#include "xparameters.h"
#include "xstatus.h"
#include "xil_printf.h"
#include "sleep.h"

// Assuming the GPIO device IDs are defined in xparameters.h
#define SEGMENT_GPIO_DEVICE_ID XPAR_AXI_GPIO_SEVEN_DEVICE_ID
#define ANODE_GPIO_DEVICE_ID   XPAR_AXI_GPIO_ANODE_DEVICE_ID

XGpio GpioSegment;
XGpio GpioAnode;

// Segment values for characters d, o, l, u in a common anode configuration
// assuming segment 'a' is LSB and segment 'g' is MSB, and DP is the decimal point
const u8 char_d = ~0b01111010;
const u8 char_o = ~0b01111110;
const u8 char_l = ~0b00111000;
const u8 char_u = ~0b00111110;

// GPIO initialization function
int GpioInit(u16 DeviceId, XGpio *GpioInstance) {
    int Status;

    Status = XGpio_Initialize(GpioInstance, DeviceId);
    if (Status != XST_SUCCESS) {
        return XST_FAILURE;
    }

    XGpio_SetDataDirection(GpioInstance, 1, 0x00); // All pins as output

    return XST_SUCCESS;
}

// Function to set segments for a character
void SetSegment(u8 character) {
    XGpio_DiscreteWrite(&GpioSegment, 1, character);
}

// Function to enable a specific anode
void EnableAnode(u8 anode) {
    XGpio_DiscreteWrite(&GpioAnode, 1, ~(1 << anode));
}

// Function to disable all anodes
void DisableAnodes() {
    XGpio_DiscreteWrite(&GpioAnode, 1, 0xFF);
}

// Display a character on a specific seven-segment display
void DisplayChar(u8 character, u8 display) {
    DisableAnodes();        // Disable all displays
    SetSegment(character);  // Set the character
    EnableAnode(display);   // Enable the current display
}

int main() {
    int Status;

    // Initialize the GPIO for the segments and anodes
    Status = GpioInit(SEGMENT_GPIO_DEVICE_ID, &GpioSegment);
    if (Status != XST_SUCCESS) {
        xil_printf("Segment GPIO Initialization Failed\r\n");
        return XST_FAILURE;
    }

    Status = GpioInit(ANODE_GPIO_DEVICE_ID, &GpioAnode);
    if (Status != XST_SUCCESS) {
        xil_printf("Anode GPIO Initialization Failed\r\n");
        return XST_FAILURE;
    }

    while (1) {
        DisplayChar(char_d, 0); // Display 'd' on the first seven-segment
        usleep(5000);           // Wait for 5 milliseconds
        DisplayChar(char_o, 1); // Display 'o' on the second seven-segment
        usleep(5000);           // Wait for 5 milliseconds
        DisplayChar(char_l, 2); // Display 'l' on the third seven-segment
        usleep(5000);           // Wait for 5 milliseconds
        DisplayChar(char_u, 3); // Display 'u' on the fourth seven-segment
        usleep(5000);           // Wait for 5 milliseconds
    }

    return XST_SUCCESS;
}
