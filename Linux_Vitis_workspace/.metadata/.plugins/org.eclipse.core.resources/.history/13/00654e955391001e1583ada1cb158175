#include "xparameters.h"
#include "xgpio.h"
#include "xil_printf.h"

// Parameter definitions
#define BUTTONS_DEVICE_ID XPAR_AXI_GPIO_BUTTON_DEVICE_ID

XGpio ButtonInst;

int InitializeGpio(XGpio *InstancePtr, u16 DeviceId);
void PollButtonAndPrint(XGpio *InstancePtr);

int main() {
    int Status;

    // Initialize Button GPIO Instance
    Status = InitializeGpio(&ButtonInst, BUTTONS_DEVICE_ID);
    if (Status != XST_SUCCESS) {
        xil_printf("Button Initialization Failed\r\n");
        return XST_FAILURE;
    }

    while (1) {
        PollButtonAndPrint(&ButtonInst);
    }

    return XST_SUCCESS;
}

int InitializeGpio(XGpio *InstancePtr, u16 DeviceId) {
    int Status = XGpio_Initialize(InstancePtr, DeviceId);
    if (Status != XST_SUCCESS) {
        return XST_FAILURE;
    }
    XGpio_SetDataDirection(InstancePtr, 1, 0xFFFFFFFF); // Set all pins as input
    return XST_SUCCESS;
}

void PollButtonAndPrint(XGpio *InstancePtr) {
    static u32 previous_state = 0;
    u32 current_state = XGpio_DiscreteRead(InstancePtr, 1);
    if (current_state != previous_state) {
        if (current_state != 0) { // Assuming a push button is pressed when logic high
            xil_printf("Button press detected!\r\n");
        }
        previous_state = current_state;
    }
}
