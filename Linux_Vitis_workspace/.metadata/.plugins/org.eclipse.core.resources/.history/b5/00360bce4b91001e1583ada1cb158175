#include "xparameters.h"
#include "xgpio.h"
#include "xuartlite.h"
#include "xspi.h"
#include "xiic.h"

// Peripheral initialization functions
int InitializeGpio(XGpio *GpioInstancePtr, u16 DeviceId);
int InitializeUartLite(XUartLite *UartLiteInstancePtr, u16 DeviceId);
int InitializeSpi(XSpi *SpiInstancePtr, u16 DeviceId);
int InitializeIic(XIic *IicInstancePtr, u16 DeviceId);

int main(void)
{
    XGpio GpioLed, GpioButton, GpioSwitch, GpioSevenSegment;
    XUartLite UartLite;
    XSpi Spi;
    XIic Iic;

    // Initialize GPIO for LEDs
    if (InitializeGpio(&GpioLed, XPAR_AXI_GPIO_LED_DEVICE_ID) != XST_SUCCESS) {
        return XST_FAILURE;
    }

    // Initialize GPIO for Buttons
    if (InitializeGpio(&GpioButton, XPAR_AXI_GPIO_BUTTON_DEVICE_ID) != XST_SUCCESS) {
        return XST_FAILURE;
    }

    // Initialize GPIO for Switches
    if (InitializeGpio(&GpioSwitch, XPAR_AXI_GPIO_SWITCHES_DEVICE_ID) != XST_SUCCESS) {
        return XST_FAILURE;
    }

    // Initialize GPIO for Seven Segment Display
    if (InitializeGpio(&GpioSevenSegment, XPAR_AXI_GPIO_SEVEN_DEVICE_ID) != XST_SUCCESS) {
        return XST_FAILURE;
    }

    // Initialize UART Lite
    if (InitializeUartLite(&UartLite, XPAR_AXI_UARTLITE_0_DEVICE_ID) != XST_SUCCESS) {
        return XST_FAILURE;
    }

    // Initialize SPI
    if (InitializeSpi(&Spi, XPAR_AXI_QUAD_SPI_0_DEVICE_ID) != XST_SUCCESS) {
        return XST_FAILURE;
    }

    // Initialize IIC for temperature sensor
    if (InitializeIic(&Iic, XPAR_AXI_TEMP_0_DEVICE_ID) != XST_SUCCESS) {
        return XST_FAILURE;
    }

    // Your application logic here

    return XST_SUCCESS;
}

// Define initialization functions here...
