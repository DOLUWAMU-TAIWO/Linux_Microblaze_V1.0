#include "xparameters.h"
#include "xgpio.h"
#include "xil_printf.h"
#include "xuartlite.h"

// Device IDs generated by Vivado for peripherals
#define GPIO_SEVEN_SEGMENT_DEVICE_ID XPAR_AXI_GPIO_SEVEN_DEVICE_ID
#define UARTLITE_DEVICE_ID XPAR_AXI_UARTLITE_0_DEVICE_ID

// The following is assumed to be the mapping of the seven segment display to the GPIO pins
#define DIGIT_ONE 0b00000110 // Assuming '1' maps to this binary pattern

XGpio Gpio; // GPIO driver instance
XUartLite UartLite; // UART driver instance

int InitializeSevenSegment(XGpio *GpioInstance, u16 DeviceId) {
    int Status = XGpio_Initialize(GpioInstance, DeviceId);
    if (Status != XST_SUCCESS) {
        return XST_FAILURE;
    }

    // Set all pins of the channel 1 of the GPIO as output
    XGpio_SetDataDirection(GpioInstance, 1, 0x00);
    return XST_SUCCESS;
}

int InitializeUartLite(XUartLite *UartLiteInstance, u16 DeviceId) {
    int Status = XUartLite_Initialize(UartLiteInstance, DeviceId);
    if (Status != XST_SUCCESS) {
        return XST_FAILURE;
    }

    return XST_SUCCESS;
}

void DisplayDigit(XGpio *GpioInstance, u8 digit) {
    // Output the digit on the seven-segment display GPIO
    XGpio_DiscreteWrite(GpioInstance, 1, digit);
}

int main() {
    if (InitializeUartLite(&UartLite, UARTLITE_DEVICE_ID) != XST_SUCCESS) {
        xil_printf("UART initialization failed\r\n");
        return XST_FAILURE;
    }

    if (InitializeSevenSegment(&Gpio, GPIO_SEVEN_SEGMENT_DEVICE_ID) != XST_SUCCESS) {
        xil_printf("Seven Segment GPIO initialization failed\r\n");
        return XST_FAILURE;
    }

    // Test displaying '1' on the seven-segment display
    DisplayDigit(&Gpio, DIGIT_ONE);
    xil_printf("Displayed 1 on the seven segment display\r\n");

    return 0;
}
